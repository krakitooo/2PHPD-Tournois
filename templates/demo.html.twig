{% extends 'base.html.twig' %}

{% block title %}Démo JWT{% endblock %}

{% block stylesheets %}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css">
{% endblock %}

{% block javascripts %}
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
{% endblock %}

{% block header %}
<nav class="navbar navbar-expand-lg navbar-light bg-light shadow-sm">
  <div class="container">
    <a class="navbar-brand" href="/">Démo JWT</a>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNav">
      <ul class="navbar-nav ms-auto">
        <li class="nav-item">
          <a class="nav-link{% if app.request.get('_route') == 'demo_page' %} active{% endif %}" href="{{ path('demo_page') }}">Accueil</a>
        </li>
        {% if app.user and 'ROLE_ADMIN' in app.user.roles %}
        <li class="nav-item">
          <a class="nav-link{% if app.request.get('_route') == 'admin_dashboard' %} active{% endif %}" href="{{ path('admin_dashboard') }}">
            <i class="bi bi-shield-lock"></i> Administration
          </a>
        </li>
        {% endif %}
      </ul>
    </div>
  </div>
</nav>
{% endblock %}

{% block body %}
<div class="container py-5">
  <h1 class="text-center mb-5 text-primary">🎮 Démo JWT avec Symfony (cookie sécurisé)</h1>

  <div id="alertBox"></div>

  <div class="row g-4">
    <!-- Formulaire d'inscription -->
    <div class="col-lg-6">
      <div class="card border-primary shadow-sm">
        <div class="card-header bg-primary text-white fw-bold">📝 Créer un compte</div>
        <div class="card-body">
          <form id="registerForm">
            <div class="mb-3">
              <label class="form-label">Nom d'utilisateur *</label>
              <input type="text" name="username" class="form-control" required>
            </div>
            <div class="mb-3">
              <label class="form-label">Prénom</label>
              <input type="text" name="firstName" class="form-control">
            </div>
            <div class="mb-3">
              <label class="form-label">Nom</label>
              <input type="text" name="lastName" class="form-control">
            </div>
            <div class="mb-3">
              <label class="form-label">Email</label>
              <input type="email" name="emailAddress" class="form-control">
            </div>
            <div class="mb-3">
              <label class="form-label">Mot de passe *</label>
              <input type="password" name="password" class="form-control" required>
            </div>
            <button class="btn btn-success w-100">S'inscrire</button>
          </form>
        </div>
      </div>
    </div>

    <!-- Formulaire de connexion -->
    <div class="col-lg-6">
      <div class="card border-success shadow-sm">
        <div class="card-header bg-success text-white fw-bold">🔑 Connexion</div>
        <div class="card-body">
          <form id="loginForm">
            <div class="mb-3">
              <label class="form-label">Nom d'utilisateur *</label>
              <input type="text" name="username" class="form-control" required>
            </div>
            <div class="mb-3">
              <label class="form-label">Mot de passe *</label>
              <input type="password" name="password" class="form-control" required>
            </div>
            <button class="btn btn-primary w-100">Se connecter</button>
          </form>
        </div>
      </div>
    </div>
  </div>

  <!-- Zone API -->
  <div class="card mt-5 shadow-sm border-dark">
    <div class="card-header bg-dark text-white fw-bold">🔐 API protégée (cookie)</div>
    <div class="card-body">
      <button class="btn btn-outline-info mb-3" id="testApi">Tester GET /api/players</button>
      <pre id="apiResult" class="bg-light border p-3 rounded"></pre>
      <button class="btn btn-outline-danger mt-3" id="logoutBtn">Se déconnecter</button>
    </div>
  </div>
</div>

<script>
const showAlert = (msg, type = 'success') => {
  document.getElementById('alertBox').innerHTML =
    `<div class="alert alert-${type} alert-dismissible fade show" role="alert">
      ${msg}
      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>`;
};

const toJson = res => res.text().then(t => {
  try { return JSON.parse(t); } catch { return t; }
});

document.getElementById('registerForm').addEventListener('submit', async (e) => {
  e.preventDefault();
  const body = Object.fromEntries(new FormData(e.target).entries());

  const res = await fetch('/register', {
    method: 'POST',
    headers: {'Content-Type': 'application/json', 'Accept': 'application/json'},
    body: JSON.stringify(body),
    credentials: 'include'
  });

  const data = await toJson(res);
  if (res.ok) {
    showAlert("✅ Utilisateur créé avec succès", 'success');
    e.target.reset();
  } else {
    showAlert("❌ Erreur : " + (data.error || data), 'danger');
  }
});

document.getElementById('loginForm').addEventListener('submit', async (e) => {
  e.preventDefault();
  const body = Object.fromEntries(new FormData(e.target).entries());

  const res = await fetch('/api/login_check', {
    method: 'POST',
    headers: {'Content-Type': 'application/json', 'Accept': 'application/json'},
    body: JSON.stringify(body),
    credentials: 'include'
  });

  const data = await toJson(res);
  if (res.ok && !data.error) {
    showAlert("✅ Connexion réussie", 'success');
  } else {
    showAlert("❌ Connexion échouée", 'danger');
  }
});

document.getElementById('testApi').addEventListener('click', async () => {
  const res = await fetch('/api/players', {
    method: 'GET',
    credentials: 'include'
  });

  const text = await res.text();
  document.getElementById('apiResult').innerText = text;
});

document.getElementById('logoutBtn').addEventListener('click', async () => {
  await fetch('/logout', {
    method: 'POST',
    credentials: 'include'
  });
  showAlert("🔓 Déconnecté avec succès", 'info');
});
</script>
{% endblock %}
